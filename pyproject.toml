[project]
name = "pint"
version = "0.1.0"
description = "A user friendly parser combinator library for python"
authors = [
    { name = "AbooMinister25", email = "aboominister@gmail.com" },
    { name = "Aboo Minister", email = "aboominister@gmail.com" },
]
dependencies = ["rich<13.0.0,>=12.4.4"]
requires-python = ">=3.8,<4.0"
readme = "README.md"
license = { text = "MIT" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
test = ["pytest>=7.1.3"]
format = ["isort>=5.10.1", "black>=22.8.0"]
lint = ["pyright>=1.1.269", "ruff>=0.5.5"]
repl = ["ipython>=7.34.0"]
coverage = ["coverage>=6.4.4"]
precommit = ["pre-commit>=2.20.0"]

[tool.pdm.build]
includes = []

[tool.pdm.scripts]
format = { shell = "ruff check --select I --fix && ruff format" }
lint = { shell = "pyright && ruff check" }
test = "pytest ."
coverage = { shell = "coverage run -m pytest && coverage report && coverage xml" }
precommit = { shell = "pdm run pre-commit run --all-files" }
all = { composite = ["format", "lint", "test", "coverage"] }

[tool.pyright]
include = ["src/pint/**/*.py"]
strict = ["src/pint/**/*.py"]

reportAssertAlwaysTrue = "warning"
reportMissingTypeStubs = "warning"
reportSelfClsParameterName = "warning"
reportUnusedExpression = "warning"
reportWildcardImportFromLibrary = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedImport = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"

[tool.ruff]
select = ["ALL"]
ignore = ["E203", "D100", "D103", "D205", "PERF203", "UP007"]
line-length = 120

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S"]

[tool.ruff.lint.pydocstyle]
convention = "google"
